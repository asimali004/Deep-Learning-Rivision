# -*- coding: utf-8 -*-
"""DL Q2 Chapter 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-2DQu5fJvxEvDpm9IL4BPfUGJ26Z63ny
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("https://raw.githubusercontent.com/EnggQasim/UIT/master/Deep_Learning/Chapter1/data/weight-height.csv")

df.sample(5)

df.info()

df.describe()

X = df.Height.values # input, data
y_true = df.Weight.values #output, labels, Asnwers

print(X[:5], y_true[:5], sep='\n\n')

#line Equation
def line(x, w=0, b=0):
    return x * w + b

#Cost Functions
def mean_squared_error(y_true, y_pred):
    s = (y_true - y_pred) ** 2
    return np.sqrt(s.mean())

plt.figure(figsize=(10,5))
ax1 = plt.subplot(121) # rows,columns, select column 121
df.plot(kind='scatter',
       x="Height",
       y="Weight",
       title="Height Vs Weight", ax=ax1)


bs = [-100, -50, 0, 50, 100, 150]

mses = []
for b in bs:
    y_pred = line(X, w=2, b=b) # predict line
    mse = mean_squared_error(y_true, y_pred)
    mses.append(mse)
    plt.plot(X, y_pred) 
    
    
ax2 = plt.subplot(122)    
plt.plot(bs, mses, 'o-')
plt.title("Cost Functions for each line")
plt.xlabel("b")

print(bs)
print(mses)

"""#Try to find w and b (weights) with Deep Learning"""

from tensorflow.keras.models import Sequential #sequential, Functional API
from tensorflow.keras.layers import Dense #each nodes connected with others nodes
from tensorflow.keras.optimizers import Adam, SGD

import tensorflow
tensorflow.__version__

print(X[:2],
     y_pred[:2], sep="\n")

model = Sequential()
model.add(Dense(1,input_shape=(1,)))

model.summary()

model.compile(Adam(lr=0.8),loss="mean_squared_error")

model.fit(X,y_true,epochs=50)

y_pred = model.predict(X)

df.plot(kind='scatter',
       x='Height',
       y="Weight",
       title="Height Vs Weight With Deep Learning (Find w and b)")
plt.plot(X, y_pred, color='red', linewidth=3)

model.get_weights()

